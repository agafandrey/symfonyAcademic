<?php

namespace Academic\ProjectBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Academic\ProjectBundle\Entity\IssueStatus;
use Doctrine\ORM\Query\Expr\Join;

/**
 * IssueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IssueStatusRepository extends EntityRepository
{
    public function getOpenStatus()
    {
        $qb =$this->getEntityManager()->createQueryBuilder();
        $qb
            ->from('AcademicProjectBundle:IssueStatus', 's')
            ->select('s')
            ->where('s.status_code =:status_code')
            ->setParameter('status_code', IssueStatus::CODE_OPENED);

        $issue_status = $qb->getQuery()->getSingleResult();
        return $issue_status;
    }

    public function getClosedStatus()
    {
        $qb =$this->getEntityManager()->createQueryBuilder();
        $qb
            ->from('AcademicProjectBundle:IssueStatus', 's')
            ->select('s')
            ->where('s.status_code =:status_code')
            ->setParameter('status_code', IssueStatus::CODE_CLOSED);

        $issue_status = $qb->getQuery()->getSingleResult();
        return $issue_status;
    }

    public function getInProgressStatus()
    {
        $qb =$this->getEntityManager()->createQueryBuilder();
        $qb
            ->from('AcademicProjectBundle:IssueStatus', 's')
            ->select('s')
            ->where('s.status_code =:status_code')
            ->setParameter('status_code', IssueStatus::CODE_INPROGRESS);

        $issue_status = $qb->getQuery()->getSingleResult();
        return $issue_status;
    }
}
