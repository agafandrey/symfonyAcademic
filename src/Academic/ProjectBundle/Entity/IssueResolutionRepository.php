<?php

namespace Academic\ProjectBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Academic\ProjectBundle\Entity\IssueResolution;
use Doctrine\ORM\Query\Expr\Join;

/**
 * IssueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IssueResolutionRepository extends EntityRepository
{
    public function getResolutionResolved()
    {
        $qb =$this->getEntityManager()->createQueryBuilder();
        $qb
            ->from('AcademicProjectBundle:IssueResolution', 's')
            ->select('s')
            ->where('s.resolution_code =:resolution_code')
            ->setParameter('resolution_code', IssueResolution::CODE_RESOLVED);

        $issue_resolution = $qb->getQuery()->getSingleResult();
        return $issue_resolution;
    }

    public function getResolutionUnResolved()
    {
        $qb =$this->getEntityManager()->createQueryBuilder();
        $qb
            ->from('AcademicProjectBundle:IssueResolution', 's')
            ->select('s')
            ->where('s.resolution_code =:resolution_code')
            ->setParameter('resolution_code', IssueResolution::CODE_UNRESOLVED);

        $issue_resolution = $qb->getQuery()->getSingleResult();
        return $issue_resolution;
    }

    public function getResolutionReopened()
    {
        $qb =$this->getEntityManager()->createQueryBuilder();
        $qb
            ->from('AcademicProjectBundle:IssueResolution', 's')
            ->select('s')
            ->where('s.resolution_code =:resolution_code')
            ->setParameter('resolution_code', IssueResolution::CODE_REOPENED);

        $issue_resolution = $qb->getQuery()->getSingleResult();
        return $issue_resolution;
    }
}
